stages:
  - build
  - test
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  VENV_PATH: "$CI_PROJECT_DIR/djangoenv"

build:
  stage: build
  image: python:3.11-slim
  before_script:
    - apt-get update && apt-get install -y gcc pkg-config libmariadb-dev
    - python3 -m venv $VENV_PATH
    - source $VENV_PATH/bin/activate
    - pip install --upgrade pip
  script:
    - pip install -r requirements.txt
  artifacts:
    paths:
      - djangoenv/
    expire_in: 1 hour
  only:
    - main
    - develop
    
test:
  stage: test
  image: python:3.11-slim
  before_script:
    - source "$VENV_PATH/bin/activate"
  script:
    - python manage.py test
  dependencies:
    - build
  only:
    - main
    - develop

deploy:
  stage: deploy
  image: python:3.11-slim
  before_script:
    - apt-get update && apt-get install -y gcc pkg-config libmariadb-dev curl
    - python3 -m venv $VENV_PATH
    - source $VENV_PATH/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements.txt
  script:
    - echo "Deploying Django application..."
    - pip install gunicorn
    - export SECRET_KEY=$SECRET_KEY
    - export DB_NAME=$DB_NAME
    - export DB_USER=$DB_USER
    - export DB_PASSWORD=$DB_PASSWORD
    - export DB_HOST=$DB_HOST
    - export DB_PORT=$DB_PORT
    - export EMAIL_HOST_USER=$EMAIL_HOST_USER
    - export EMAIL_HOST_PASSWORD=$EMAIL_HOST_PASSWORD
    - export DEBUG=$DEBUG
    - python manage.py collectstatic --noinput
    - gunicorn myproject.wsgi:application --config gunicorn.conf.py --log-level debug &
    - sleep 10
    - curl --retry 5 --retry-delay 5 http://127.0.0.1:8080 || (echo "App failed to start"; exit 1)
  dependencies:
    - test
  environment:
    name: production
  only:
    - main
  when: manual