stages:
  - build
  - test
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  VENV_PATH: "$CI_PROJECT_DIR/djangoenv"

build:
  stage: build
  image: python:3.11-slim
  before_script:
    - apt-get update && apt-get install -y gcc libmariadb-dev pkg-config
    - python3 -m venv $VENV_PATH
    - source $VENV_PATH/bin/activate
    - pip install --upgrade pip
  script:
    - pip install -r requirements.txt
  artifacts:
    paths:
      - djangoenv/
    expire_in: 1 hour
  only:
    - main
    - develop
    
test:
  stage: test
  image: python:3.11-slim
  before_script:
    - source "$VENV_PATH/bin/activate"
  script:
    - python manage.py test || echo "No tests found, skipping."
  dependencies:
    - build
  only:
    - main
    - develop

deploy:
  stage: deploy
  image: python:3.11-slim
  before_script:
  - apt-get update && apt-get install -y gcc pkg-config libmariadb-dev
  - python3 -m venv $VENV_PATH
  - source $VENV_PATH/bin/activate
  - pip install --upgrade pip
    - pip install -r requirements.txt
  script:
    - echo "Deploying Django application..."
    - pip install gunicorn
    - export SECRET_KEY=$SECRET_KEY  # ensure environment var is available
    - python manage.py collectstatic --noinput
    - gunicorn myproject.wsgi:application --config gunicorn.conf.py
  dependencies:
    - test
  environment:
    name: production
  only:
    - main
  when: manual